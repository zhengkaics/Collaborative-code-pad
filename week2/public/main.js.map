{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/new-problem/new-problem.component.css","webpack:///./src/app/components/new-problem/new-problem.component.html","webpack:///./src/app/components/new-problem/new-problem.component.ts","webpack:///./src/app/components/problem-detail/problem-detail.component.css","webpack:///./src/app/components/problem-detail/problem-detail.component.html","webpack:///./src/app/components/problem-detail/problem-detail.component.ts","webpack:///./src/app/components/problem-list/problem-list.component.css","webpack:///./src/app/components/problem-list/problem-list.component.html","webpack:///./src/app/components/problem-list/problem-list.component.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport {DataService} from \"./services/data.service\";\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\nimport {routing} from \"./app.routes\";\nimport { NewProblemComponent } from './components/new-problem/new-problem.component';\nimport {FormsModule} from \"@angular/forms\";\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport {HttpClientModule} from \"@angular/common/http\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProblemListComponent,\n    ProblemDetailComponent,\n    NewProblemComponent,\n    NavbarComponent\n\n  ],\n  imports: [\n    BrowserModule,\n    routing,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [{\n    provide: \"data\",\n    useClass: DataService\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Routes, RouterModule} from \"@angular/router\";\nimport {ProblemListComponent} from \"./components/problem-list/problem-list.component\";\nimport {ProblemDetailComponent} from \"./components/problem-detail/problem-detail.component\";\n\nconst routes: Routes=[\n  {\n    path: \"\",\n    redirectTo: \"problems\",\n    pathMatch: \"full\"\n  },\n  {\n    path: \"problems\",\n    component:ProblemListComponent\n  },\n  {\n    path: \"problems/:id\",\n    component:ProblemDetailComponent\n  },\n  {\n    path: \"**\",\n    redirectTo: \"problems\",\n  }\n];\n\nexport const routing = RouterModule.forRoot(routes);\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">{{NVBtitle}}</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">Link</a>\\n        </li>\\n        <li class=\\\"nav-item dropdown\\\">\\n          <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" >\\n            {{username}}\\n          </a>\\n          <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">My Profile</a>\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">My Favorites</a>\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">My Submission</a>\\n            <div class=\\\"dropdown-divider\\\"></div>\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">log out</a>\\n          </div>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link disabled\\\" href=\\\"#\\\">Disabled</a>\\n        </li>\\n      </ul>\\n        <form class=\\\"navbar-form\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Sign in</button>\\n        </form>\\n      <form class=\\\"form-inline my-2 my-lg-0\\\">\\n        <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Search Problem\\\" aria-label=\\\"Search\\\">\\n      </form>\\n    </div>\\n  </nav>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  NVBtitle= \"ZKCodePad\";\n\n  username=\"zhengkai\"\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <form #formRef=\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"problemName\\\">Problem Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"problemName\\\"\\n             name=\\\"problemName\\\" required placeholder=\\\"Enter Problem Name\\\" [(ngModel)]=\\\"newProblem.name\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"problemDesc\\\">Problem Description</label>\\n      <textarea type=\\\"text\\\" row=\\\"3\\\" class=\\\"form-control\\\" id=\\\"problemDesc\\\"\\n                name=\\\"problemDesc\\\" required placeholder=\\\"Enter Problem Desciiption\\\" [(ngModel)]=\\\"newProblem.desc\\\"></textarea>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"difficulty\\\">Difficulty</label>\\n      <select type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"difficulty\\\"\\n              name=\\\"difficulty\\\" [(ngModel)]=\\\"newProblem.difficulty\\\">\\n        <option *ngFor=\\\"let difficulty of difficulties\\\" [value]=\\\"difficulty\\\">\\n          {{difficulty}}\\n        </option>\\n      </select>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" (click)=\\\"addProblem()\\\">Add Problem</button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {Problem} from \"../../models/problem.model\";\nimport {error} from \"@angular/compiler/src/util\";\n\nconst DEFAULT_PROBLEM :Problem=Object.freeze({\n  id:0,\n  name:\"\",\n  desc:\"\",\n  difficulty:\"Easy\"\n})\n\n@Component({\n  selector: 'app-new-problem',\n  templateUrl: './new-problem.component.html',\n  styleUrls: ['./new-problem.component.css']\n})\nexport class NewProblemComponent implements OnInit {\n\n\n  public difficulties = [\"Easy\",\"Medium\",\"Hard\",\"Super\"]\n\n  newProblem: Problem = Object.assign({},DEFAULT_PROBLEM)\n\n  constructor(@Inject(\"data\") private data) { }\n\n  ngOnInit() {\n  }\n\n  addProblem():void{\n    this.data.addProblem(this.newProblem)\n      .catch(error=>console.log(error.body));\n    this.newProblem=Object.assign({},DEFAULT_PROBLEM)\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"problem\\\">\\n  <div class=\\\"col-xs-12 col-md-4\\\">\\n    <div>\\n      <h2>\\n        {{problem.id}}. {{problem.name}}\\n      </h2>\\n      <p>\\n        {{problem.desc}}\\n      </p>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport {Problem} from \"../../models/problem.model\";\nimport {ActivatedRoute,Params} from \"@angular/router\";\n\n@Component({\n  selector: 'app-problem-detail',\n  templateUrl: './problem-detail.component.html',\n  styleUrls: ['./problem-detail.component.css']\n})\nexport class ProblemDetailComponent implements OnInit {\n\n  problem: Problem;\n\n  constructor(\n    private route: ActivatedRoute,\n    @Inject(\"data\") private data\n  ) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params =>{\n      this.data.getProblem(+params['id'])\n        .then(problem=>this.problem=problem);\n\n    });\n  }\n\n}\n","module.exports = \".difficulty {\\n  min-width: 65px;\\n  margin-right: 10px;\\n}\\n\\n.label.difficulty {\\n  padding-top: 0.6em;\\n  color: #fbfdfa;\\n  font-size: 12px;\\n}\\n\\n.title {\\n  font-size: 1.2em;\\n}\\n\\n.diff-easy {\\n  background-color: #42ebf4;\\n}\\n\\n.diff-medium {\\n  background-color: #92cf5c;\\n}\\n\\n.diff-hard {\\n  background-color: #dd0d1e;\\n}\\n\\n.diff-super {\\n  background-color: #8d16e2;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <app-new-problem></app-new-problem>\\n  <div class=\\\"list-group\\\">\\n    <a class=\\\"list-group-item\\\" *ngFor=\\\"let problem of problems\\\" [routerLink]=\\\"['/problems', problem.id]\\\"><!--ngFor遍历数组每个成员 -->\\n      <span class=\\\"{{'pull-left label difficulty diff-' + problem.difficulty.toLowerCase()}}\\\">{{problem.difficulty}}</span>\\n      <strong class=\\\"title\\\">{{problem.id}},{{problem.name}}</strong>\\n\\n    </a>\\n  </div>\\n</div>\\n\"","import  {Component, Inject, OnInit} from '@angular/core';\nimport {Problem} from \"../../models/problem.model\";\nimport {Subscription} from \"rxjs\";\n\n\n@Component({\n  selector: 'app-problem-list',\n  templateUrl:'./problem-list.component.html',\n  styleUrls:['./problem-list.component.css']\n})\nexport class ProblemListComponent implements OnInit {\n  problems: Problem[]=[];\n\n  subscripttionProblems:Subscription;\n  constructor(@Inject(\"data\") private data) { }\n\n  ngOnInit() {\n    this.getProblems();\n  }\n\n\n  getProblems():void{\n    this.subscripttionProblems=this.data.getProblems()\n      .subscribe(problems=>this.problems=problems);\n   // this.problems=this.data.getProblems()\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {Problem} from \"../models/problem.model\";\nimport {NgModule} from \"@angular/core\";\nimport {HttpClientModule, HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {BehaviorSubject, Observable} from \"rxjs/index\";\n\n\n@NgModule({\n  imports:[\n    HttpClient,\n    HttpClientModule,\n  ],\n  providers:[HttpClientModule],\n  })\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  private problemSource=new BehaviorSubject<any>([]);\n  constructor(private http:HttpClient) { }\n  getProblems():Observable<Problem[]>{\n    this.http.get(\"api/v1/problems\")\n      .toPromise()\n      .then((res:Response)=>{\n        this.problemSource.next(res);\n    }).catch(this.handleError);\n    return this.problemSource.asObservable();\n  }\n  getProblem(id:number): Promise<Problem>{\n    return this.http.get(`api/v1/problems/${id}`)\n      .toPromise()\n      .then((res:Response)=>res)\n      .catch(this.handleError);\n\n  }\n\n  httpOptions={\n    headers:new HttpHeaders({\n      'Content-type':'application/json'\n    })\n  };\n  addProblem(problem:Problem):Promise<Problem>{\n    return this.http.post('/api/v1/problems',problem,this.httpOptions)\n      .toPromise()\n      .then((res:Response)=>{\n          this.getProblems();\n          return res;\n      })\n      .catch(this.handleError);\n  }\n  private handleError(error:any):Promise<any>{\n    console.error('An error occurred',error);\n    return Promise.reject(error.body||error);\n  }\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}